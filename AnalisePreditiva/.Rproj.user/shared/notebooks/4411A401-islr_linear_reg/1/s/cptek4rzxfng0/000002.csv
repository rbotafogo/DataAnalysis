"0","library(ISLR)"
"0","library(tidyverse)"
"0","library(ggplot2)"
"0","# Multiple plot function"
"0","#"
"0","# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)"
"0","# - cols:   Number of columns in layout"
"0","# - layout: A matrix specifying the layout. If present, 'cols' is ignored."
"0","#"
"0","# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),"
"0","# then plot 1 will go in the upper left, 2 will go in the upper right, and"
"0","# 3 will go all the way across the bottom."
"0","#"
"0","multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {"
"0","  library(grid)"
"0","  # Make a list from the ... arguments and plotlist"
"0","  plots <- c(list(...), plotlist)"
"0","  numPlots = length(plots)"
"0","  # If layout is NULL, then use 'cols' to determine layout"
"0","  if (is.null(layout)) {"
"0","    # Make the panel"
"0","    # ncol: Number of columns of plots"
"0","    # nrow: Number of rows needed, calculated from # of cols"
"0","    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),"
"0","                    ncol = cols, nrow = ceiling(numPlots/cols))"
"0","  }"
"0"," if (numPlots==1) {"
"0","    print(plots[[1]])"
"0","  } else {"
"0","    # Set up the page"
"0","    grid.newpage()"
"0","    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))"
"0","    # Make each plot, in the correct location"
"0","    for (i in 1:numPlots) {"
"0","      # Get the i,j matrix positions of the regions that contain this subplot"
"0","      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))"
"0","      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,"
"0","                                      layout.pos.col = matchidx$col))"
"0","    }"
"0","  }"
"0","}"
